ğŸ”Œ Interfaces encontradas no teu projeto

1. IUnidadeDeTrabalho

PadrÃ£o usado: Unit of Work

FunÃ§Ã£o: Gerir transaÃ§Ãµes de base de dados. Garante que todas as alteraÃ§Ãµes em repositÃ³rios sejam tratadas como uma Ãºnica operaÃ§Ã£o atÃ³mica.

Usos comuns:

IniciarTransacao()

Confirmar()

Cancelar()

ğŸ’¡ Evita que operaÃ§Ãµes parciais fiquem gravadas em caso de erro.
---------------
2. IRepositorioEmprestimos
3. IRepositorioExemplares
4. IRepositorioLivros
5. IRepositorioUsuarios

Estas quatro seguem o PadrÃ£o RepositÃ³rio, e tÃªm funÃ§Ãµes semelhantes, aplicadas a diferentes entidades:

ğŸ“š FunÃ§Ã£o comum dos RepositÃ³rios
Isolam o acesso Ã  base de dados

Fornecem operaÃ§Ãµes CRUD (Create, Read, Update, Delete) para cada tipo de entidade

Facilitam testes e manutenÃ§Ã£o, ao desacoplar a lÃ³gica de negÃ³cio da tecnologia de persistÃªncia

-----------------

ğŸ§  Por que estas interfaces sÃ£o importantes no teu projeto?

ğŸ”„ Flexibilidade: podes mudar a base de dados (ex: de SQLite para SQL Server) sem alterar a lÃ³gica da aplicaÃ§Ã£o.

ğŸ§ª Testabilidade: facilita o uso de mocks e testes unitÃ¡rios.

ğŸ’¼ OrganizaÃ§Ã£o: separa claramente responsabilidades entre camadas da aplicaÃ§Ã£o.

