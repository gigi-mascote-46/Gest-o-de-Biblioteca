üß© Polimorfismo no teu projeto
1. Via Interfaces (Polimorfismo por contrato)
Exemplo: IRepositorioUsuarios, IRepositorioLivros, etc.
Cada uma destas interfaces define o mesmo conjunto de m√©todos (ex: Adicionar(), ObterPorId()), mas as classes que as implementam (como RepositorioUsuariosSQLite) fornecem diferentes implementa√ß√µes concretas.

csharp
Copiar
Editar
IRepositorioUsuarios repo = new RepositorioUsuariosSQLite();
Usuario u = repo.ObterPorId(id);
‚û°Ô∏è Aqui, o c√≥digo n√£o se importa com o tipo espec√≠fico do reposit√≥rio ‚Äî s√≥ que cumpre o contrato da interface.

2. Via Exce√ß√µes Personalizadas (Polimorfismo por heran√ßa)
Todas as exce√ß√µes do dom√≠nio herdam de Exception:

csharp
Copiar
Editar
catch (Exception ex)
{
    // Pode ser qualquer exce√ß√£o: EmprestimoNaoEncontradoException, UsuarioNaoEncontradoException, etc.
}
‚û°Ô∏è Isto √© polimorfismo: diferentes exce√ß√µes tratadas de forma gen√©rica, mas cada uma com comportamento ou mensagem pr√≥pria.

3. Benef√≠cios no projeto
üîÑ Substitui√ß√£o flex√≠vel de implementa√ß√µes (por exemplo, mudar reposit√≥rio sem alterar a aplica√ß√£o)

üß™ Facilidade de testes com mocks ou stubs

üì¶ C√≥digo mais limpo e extens√≠vel